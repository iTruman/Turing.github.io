<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>末生的私博 ..</title>
  <subtitle>路遥知码力,日久见猿心 ..</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://itruman.github.io/"/>
  <updated>2017-07-28T07:05:20.969Z</updated>
  <id>https://itruman.github.io/</id>
  
  <author>
    <name>Ta叫末生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo·GitHub 你的博客</title>
    <link href="https://itruman.github.io/2017/07/27/Hexo/"/>
    <id>https://itruman.github.io/2017/07/27/Hexo/</id>
    <published>2017-07-26T16:00:00.000Z</published>
    <updated>2017-07-28T07:05:20.969Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo是台湾大学生<a href="https://twitter.com/tommy351" target="_blank" rel="external">Tommy351</a>(有墙)的杰作,是一个基于Node.js的静态博客程序。Hexo生成的静态网页可以直接放到GitHub Pages、BAR、SAE等平台上。<br><a id="more"></a></p><style>    .imgdiv{display: flex;}    .githubnew{margin-top: 100px;}</style><h3 id="预读"><a href="#预读" class="headerlink" title="预读"></a>预读</h3><p>&emsp;&emsp;搭建个人博客的方式有很多种，如WordPress、Jekyll、Octopress和Hexo等。Hexo是一个不错的选择，简易方便(但不简单)，搭配GitHub，锦上添花。Hexo是台湾大学生<a href="https://twitter.com/tommy351" target="_blank" rel="external">Tommy351</a>(有墙)的杰作,是一个基于Node.js的静态博客程序。Hexo生成的静态网页可以直接放到GitHub Pages、BAR、SAE等平台上。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="👉安装Node"><a href="#👉安装Node" class="headerlink" title="👉安装Node"></a>👉安装Node</h4><p>&emsp;&emsp;到<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js官网</a>下载相应平台的最新版本，或者到<a href="http://nodejs.cn/download/" target="_blank" rel="external">Node.js中文网</a>下载相应版本，具体安装一路next即可。安装Node是用来生成静态页面的。</p><h4 id="👉安装Git"><a href="#👉安装Git" class="headerlink" title="👉安装Git"></a>👉安装Git</h4><p>&emsp;&emsp;<a href="https://git-scm.com/download" target="_blank" rel="external">Git官网</a>下载Windows 的<a href="https://git-scm.com/download/win" target="_blank" rel="external">32位</a>版本或者是<a href="https://git-scm.com/download/win" target="_blank" rel="external">64位</a>版本,点开Windows下载默认下载64位版本。不过本人测试发现有时很慢，另推荐一个GitHub的下载<a href="https://git-for-windows.github.io/" target="_blank" rel="external">链接</a>。Git是为了把本地的Hexo内容Push到GitHub上去。具体请参考<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰Git</a>或本人的<a href="">Git安装与使用</a>。</p><h4 id="👉注册GitHub"><a href="#👉注册GitHub" class="headerlink" title="👉注册GitHub"></a>👉注册GitHub</h4><p>&emsp;&emsp;打开<a href="https://github.com/" target="_blank" rel="external">GitHub官网</a>点击注册。登陆之后新建一个与你用户名对应的Repository，并且命名为：yourusername.github.io。然后给你的GitHub账户<a href="">添加SSH Key</a>，也就是添加你的公钥，至于什么是<a href="http://www.williamlong.info/archives/837.html" target="_blank" rel="external"><strong>公私钥</strong></a>这涉及到密码学的一些知识。如果不会添加SSH Key前面有添加SSH Key的链接，实在不济，可以不添加，改用HTTPS协议来Push你的Hexo内容，后文会讲到如何HTTPS来Push的设置方法。</p><div class="imgdiv"><br>    <img class="githubnew" src="/img/GitHubNew1.png" title="新建仓库"><br>    <img src="/img/GitHubNew2.png" title="命名仓库"><br></div><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><h4 id="👉Hexo安装-amp-Init"><a href="#👉Hexo安装-amp-Init" class="headerlink" title="👉Hexo安装 &amp; Init"></a>👉Hexo安装 &amp; Init</h4><p>&emsp;1.Hexo 安装<br>&emsp;&emsp;Node和Git安装完成之后，打开Git Bash,输入如下命令即可安装Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo    /*-g 表示全局安装*/</div></pre></td></tr></table></figure></p><p>&emsp;2.Hexo Init<br>&emsp;&emsp;可以直接执行init命令到指定目录下，也可以cd到目录下执行init命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init &lt;folder&gt; /*init 到指定目录下*/</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd Blog      /*cd 到指定目录，如Blog*/</div><div class="line">hexo init    /*初始化hexo*/</div></pre></td></tr></table></figure><h4 id="👉生成、启动、部署"><a href="#👉生成、启动、部署" class="headerlink" title="👉生成、启动、部署"></a>👉生成、启动、部署</h4><p>&emsp;1.生成静态页面<br>&emsp;&emsp;在init目录下输入下面命令会生成静态页面，你可以看到在你的目录下多了一个public文件，在此文件夹下可以看到生成的静态页面。在生成之前可以使用clean先清理一下原来的旧文件，该命令会删除public文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean   /* 清理 */</div><div class="line">hexo g      /* 或 hexo generate */</div></pre></td></tr></table></figure></p><p>&emsp;2.本地浏览启动<br>&emsp;&emsp;输入此命令，并在浏览器中打开<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>即可看到文章的预览，看到有人说预览不了，尽量使用高级浏览器预览。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo s   /* 或 hexo server */</div><div class="line"></div><div class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s    /* 便(tou)捷(lan)组合 */</div></pre></td></tr></table></figure></p><p>&emsp;3.部署到GitHub<br>&emsp;&emsp;打开博客文件夹下的_config.yml配置文件，找到最后几行，然后把type改成git(注意分号后面要加空格)，repository填写上你在GitHub上建立的路径。此处有两种写法。<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">官方配置文档</a><br>&emsp;&emsp;<img src="/img/HexoDeploy.png"><br>&emsp;&emsp;前文配置好SSH Key并且成功添加至GitHub上测试成功的填写使用SSH协议的地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:yourusername/yourusername.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;没有配置SSH Key的可以填写,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/yourusername/yourusername.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;填写完成之后输入如下命令，之后再Push至GitHub上，部署成功后会有如下图显示。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;<img src="/img/HexoDeploy1.png"></p><h4 id="👉撰写文章"><a href="#👉撰写文章" class="headerlink" title="👉撰写文章"></a>👉撰写文章</h4><p>&emsp;&emsp;执行 hexo new [layout] &lt;·title·&gt; 命令即可生成新的文章，layout为可选参数，默认值为post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。文章的默认文件格式是MarkDown格式(如：hexo.markdown/hexo.md)。这种文档写法可以参考<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">MarkDown语法说明</a>。附上<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">Hexo写作官方文档</a>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new HelloHexo     /* 在post目录下新建一个HelloHexo的文章 */</div></pre></td></tr></table></figure></p><h3 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h3><h4 id="👉主题安装"><a href="#👉主题安装" class="headerlink" title="👉主题安装"></a>👉主题安装</h4><p>&emsp;&emsp;Hexo很好的一点就是提供了比较丰富的博客主题，可以通过Hexo的主题列表<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external"> Hexo Theme </a>或者是官网比较直观的<a href="https://hexo.io/themes/" target="_blank" rel="external"> Theme </a>来获取你想要的主题，当然如果想要<strong>私人订制</strong>请移步<a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="external"> Here </a>。<br>&emsp;&emsp;下载主题。在Git Bash中输入如下命令即可完成主题的下载与更新。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee  /* yelee可省略*/</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;下载成功之后，打开 _config.yml 修改主题为你下载的主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">themes: yelee</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;更新主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd themes/yelee</div><div class="line">git pull</div></pre></td></tr></table></figure></p><h4 id="👉自定义页面"><a href="#👉自定义页面" class="headerlink" title="👉自定义页面"></a>👉自定义页面</h4><p>&emsp;&emsp;执行new page 命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page &quot;about&quot;</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;在 source\ 目录下会生成一个about目录，里面有个 index.md，直接编辑即可，随后在主题的 _config.yml 文件中配置将其显示出来。</p><p><div class="imgdiv"><br>    <img src="/img/AboutFix.png">&gt;<br>    <img src="/img/AboutFix1.png"><br></div><br>&emsp;&emsp;上述内容<strong>还有这种操作</strong>，在source\目录下新建一个 about 之后在 about 中新建一个 index.md 也是可以的，当然你还可以新建一个 index.html 页面并进行编写。</p><h4 id="👉404页面"><a href="#👉404页面" class="headerlink" title="👉404页面"></a>👉404页面</h4><p>&emsp;&emsp;使用new page 创建 404 页面,之后就会在 source\ 目录下多一个 404 文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page 404</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;在 index.md文件中添加 permalink: /404<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: 404 Not Found：该页喝老人茶去了</div><div class="line">toc: false</div><div class="line">comments: false</div><div class="line">permalink: /404</div><div class="line">---</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;当然也可以接入一些公益的404页面：<br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="http://www.qq.com/404/?&amp;callback=reg&amp;_=1501224374749" target="_blank" rel="external">1️⃣ 腾讯公益404</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="http://yibo.iyiyun.com/Index/web404" target="_blank" rel="external">2️⃣ 404公益_益云(公益互联网)社会创新中心</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="http://404page.missingkids.org.tw/" target="_blank" rel="external">3️⃣ 失蹤兒童少年資料管理中心404</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo是台湾大学生&lt;a href=&quot;https://twitter.com/tommy351&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tommy351&lt;/a&gt;(有墙)的杰作,是一个基于Node.js的静态博客程序。Hexo生成的静态网页可以直接放到GitHub Pages、BAR、SAE等平台上。&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://itruman.github.io/categories/Tech/"/>
    
    
      <category term="Hexo" scheme="https://itruman.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="https://itruman.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Nginx简易配置(Windows)</title>
    <link href="https://itruman.github.io/2017/07/27/Nginx/"/>
    <id>https://itruman.github.io/2017/07/27/Nginx/</id>
    <published>2017-07-26T16:00:00.000Z</published>
    <updated>2017-07-28T06:19:01.422Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://nginx.org" target="_blank" rel="external"><strong>Nginx(engine x) </strong></a>是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。<a href="https://github.com/nginx/nginx.git" target="_blank" rel="external">这里</a>是Nginx在GitHub上的源码。Nginx的功能很强大，不仅可以作为静态HTTP服务器、反向代理服务器还可以做负载均衡、虚拟主机和<a href="https://baike.baidu.com/item/fastcgi/10880685?fr=aladdin" target="_blank" rel="external"> FastCGI</a>。本文记录的是简单<strong><strong>静态HTTP服务器</strong></strong>的配置。<br><a id="more"></a></p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>&emsp;&emsp;<a href="http://nginx.org" target="_blank" rel="external"><strong>Nginx(engine x) </strong></a>是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。<a href="https://github.com/nginx/nginx.git" target="_blank" rel="external">这里</a>是Nginx在GitHub上的源码。Nginx的功能很强大，不仅可以作为静态HTTP服务器、反向代理服务器还可以做负载均衡、虚拟主机和<a href="https://baike.baidu.com/item/fastcgi/10880685?fr=aladdin" target="_blank" rel="external"> FastCGI</a>。本文记录的是简单<strong><strong>静态HTTP服务器</strong></strong>的配置。</p><h3 id="Nginx配置-Windows"><a href="#Nginx配置-Windows" class="headerlink" title="Nginx配置(Windows)"></a>Nginx配置(Windows)</h3><p></p><h4>1.下载Nginx：</h4><br>&emsp;&emsp;选择自己需要的版本进入<a href="http://nginx.org/en/download.html" target="_blank" rel="external"><strong> 官网 </strong></a>下载Nginx。<br><img src="/img/NginxDownload.png" title="Nginx下载" style="display:inline-block;width: 50%;height: 50%;"><p></p><p></p><h4>2.解压Nginx：</h4><br>&emsp;&emsp;将下载好的压缩包解压至你想存放Nginx的磁盘分区或者文件夹内。如图，我把Nignx解压到C盘的Soft文件夹内。<br><img src="/img/NginxUnzip.png" title="解压Nginx"><p></p><p></p><h4>3.启动测试：</h4><br>&emsp;&emsp;进入Nginx文件夹内，双击Nginx.exe即可启动Nginx,打开浏览器输入：<a href="http://localhost/" target="_blank" rel="external">http://localhost</a>,看到Welcome to nginx!页面，Nginx启动成功。<p></p><div style="display: flex;"><br>    <img src="/img/NginxStart.png" title="Nginx启动" style="flex: 1;"><strong> &gt;</strong><br>    <img src="/img/NginxWelcome.png" title="Welcome to nginx !" style="flex: 1"><br></div><p>&emsp;&emsp;Nginx相关命令(打开CMD,切换到Nginx所在目录)<br>&emsp;&emsp;&emsp;&emsp;1.启动：start nginx<br>&emsp;&emsp;&emsp;&emsp;2.停止：nginx -s stop<br>&emsp;&emsp;&emsp;&emsp;3.重启：nginx -s reload<br>&emsp;&emsp;&emsp;&emsp;4.退出：nginx -s quit</p><p></p><h4>4.配置路径：</h4><br>&emsp;&emsp;打开文件夹中的nginx.conf文件，可以使用Sublime Text之类的文本编辑器打开，不推荐记事本。<p></p><p><div style="display: flex;"><br>    <img src="/img/NginxFix.png" title="配置路径" style="flex: 1;"><strong> &gt;</strong><br>    <img src="/img/NginxConf.png" title="配置路径" style="flex: 1;"><br></div></p><pre>    location / {              root  html;              index  index.html index.htm;          } </pre><strong>将初始root目录👆更改到你的项目目录👇</strong><pre>    location / {              root   D:/h4;              index  index.php index.html index.htm;          }  </pre><h3 id="拓展链接"><a href="#拓展链接" class="headerlink" title="拓展链接"></a>拓展链接</h3><p>&emsp;&emsp;&emsp;👉<a href="http://blog.csdn.net/tdcqfyl/article/details/51992758" target="_blank" rel="external">Nginx简单配置</a><br>&emsp;&emsp;&emsp;👉<a href="http://blog.csdn.net/tjcyjd/article/details/50695922" target="_blank" rel="external">Nginx配置文件详解</a><br>&emsp;&emsp;&emsp;👉<a href="https://segmentfault.com/a/1190000002797601" target="_blank" rel="external">Nginx服务器安装及配置文件详解</a></p><script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-597837260fc3f1e1"></script> ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://nginx.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Nginx(engine x) &lt;/strong&gt;&lt;/a&gt;是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。&lt;a href=&quot;https://github.com/nginx/nginx.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;是Nginx在GitHub上的源码。Nginx的功能很强大，不仅可以作为静态HTTP服务器、反向代理服务器还可以做负载均衡、虚拟主机和&lt;a href=&quot;https://baike.baidu.com/item/fastcgi/10880685?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; FastCGI&lt;/a&gt;。本文记录的是简单&lt;strong&gt;&lt;strong&gt;静态HTTP服务器&lt;/strong&gt;&lt;/strong&gt;的配置。&lt;br&gt;
    
    </summary>
    
      <category term="FrontEnd" scheme="https://itruman.github.io/categories/FrontEnd/"/>
    
    
      <category term="Nginx" scheme="https://itruman.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>致三年后的你</title>
    <link href="https://itruman.github.io/2017/07/03/Three%C2%B7Years%C2%B7Later/"/>
    <id>https://itruman.github.io/2017/07/03/Three·Years·Later/</id>
    <published>2017-07-03T06:01:38.000Z</published>
    <updated>2017-07-28T06:21:07.100Z</updated>
    
    <content type="html"><![CDATA[<p>愿你走出半生，归来仍是少年。<br><a id="more"></a></p><p>&emsp;&emsp;你好，首先恭喜你，还有几天就要毕业离校；其次祝福你，将要真正的踏入社会；去奋斗你想要的样子。</p><p>&emsp;&emsp;如果你看到了，请确保你有27(这一年你27，也是你最喜欢的两个数字)分钟的时间，认真地看下去，否则请关闭，该干嘛干嘛去，改日再看。</p><p>&emsp;&emsp;未来的你和现在的我都明白:时光匆匆，往日不复。看到这里你会不会想起未来三年中的我是什么样子。主宰自我拼搏奋进还是形为路人甲乙丙丁？我不知道，但是你知道。因为我不晓未来，你可通过去。但是有一点，你肯定还是喜欢<strong>《光荣》</strong>。点开听听吧。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&id=26562231&auto=0&height=66"></iframe><p>&emsp;&emsp;找个镜子吧，看看你的面容。不同于三年前的稚嫩，而是越发显得成熟，应该还有点月半。看看右手中指根部，那里肯定还有一个红点点，如果比照片中大，请去医院检查，谢谢也希望你配合。[照片1-脸][照片2-手]再看看左手，希望你的手腕处还有我现在戴着的手表，如果有很庆幸，你还是一个时间观念较强的人，这一点也谢谢。如果现在你的身边有体重计，去测一下，希望你能&gt;65Kg，不会同现在的我一样瘦，不然没有足够的革命本钱，当然这65Kg+希望有锻炼的影子。看看你的书架，如果还有《百年孤独》，请送人或者是封藏，曾经一度它让你很偏激。再看看你的收获，是否拥有一群新的好友，一份丰富的阅历，一棵向你开花的向日葵。还有希望再未来的三年中能够多多与人交流，从初中之后你的交际圈全是被动，认识的人，了解的事等等，等等。主动些吧，如果主动去获取、学习、认识、结交这些技能都不会，那未来的三年气不是还是在日复一日地COPY和PASTE？主动虽然有时候会碰壁，但是又有什么是一帆风顺的呢？君请加油！</p><p>&emsp;&emsp;很好奇，也一直很想知道你现在内心世界的样子。因为想知道你是不是还有那种恐惧，以及世界是灰蒙蒙的感觉。2016年的上半年我的内心是奋进的，工作上不忧愁，生活上很充实，感情世界也是单一的。不过下半年去了北京，真正的噩梦才刚刚开始。先是状态的低迷、姿态的蜷缩以及到后来的身体不适、精神防线的崩溃。本以为寒假到家可以好好出去走走，结果到家的第二天扭到了脚，硬生生地半卧半躺一个寒假。最后选择了休学这条路。那时刻的内心是荒芜、恐惧还有一丝虚度光阴念头。写到这里，希望你现在的内心是充实的，不管周遭顺利与否，但求内心安稳如初，遇到事情的时候也能像《The Three idiots》里面一样，碰到事情的时候能够“<strong><em>All is well</em></strong>”。如果内心还是虚无的，只能说明你这三年真的是很差劲。我一直认为我是属于那百分之十的人，这百分之十或为优秀，或为平凡，但绝不平庸。同时，希望现在的你还是属于那百分之十的人，但非平凡。</p><p>&emsp;&emsp;想说的挺多，但是说出来的很少，就先这样吧，三年后再看。</p><p>&emsp;&emsp;END：不知道你看完是怎么一个反应，是不是在写博客？</p><p></p><p style="float:right;">2017年</p><div style="clear: both;"></div><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;愿你走出半生，归来仍是少年。&lt;br&gt;
    
    </summary>
    
      <category term="Whatever" scheme="https://itruman.github.io/categories/Whatever/"/>
    
    
      <category term="NaN" scheme="https://itruman.github.io/tags/NaN/"/>
    
      <category term="Future" scheme="https://itruman.github.io/tags/Future/"/>
    
  </entry>
  
  <entry>
    <title>Blog First</title>
    <link href="https://itruman.github.io/2017/06/21/Blog%C2%B7First/"/>
    <id>https://itruman.github.io/2017/06/21/Blog·First/</id>
    <published>2017-06-21T08:09:28.000Z</published>
    <updated>2017-07-28T06:21:42.031Z</updated>
    
    <content type="html"><![CDATA[<p>第一篇博客，写了一段比较粗糙杂乱的心路历程。<br><a id="more"></a></p><h3 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h3><p>&emsp;&emsp;为什么？关于为什么开博客、写博客，最初只是一个突然萌生的想法。在刚去北京的第二个月，我就开始不太能适应在北京的研究生生活。感觉自己再浑浑噩噩地虚度。于是就想着干点什么，只可惜那时候想搭建一个属于自己的博客还不知道用什么方法，便改为写周记，整整的写了半年。现在还在写，只不过从周记渐变为手札。休学后开始工作，我很喜欢前端，但不局限于此。后来发现<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> + <a href="www.github.com">GitHub</a>。于是正式开工，折腾了好久，就有了<a href="http://itruman.github.io">我的博客</a>。目前还很简陋，Bug之处还请指教。<br><i style="display:inline-block;width: 90%;height: 20em;margin: 0 5%;background:url(/img/bg01.jpg) no-repeat;background-size:cover;"></i></p><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><p>&emsp;&emsp;是什么？博客是什么这个概念我不是很懂，我理解的大概就是:<strong>博君笑，客来看，不足还请多指教。</strong>尽力吧，让博客有自己的影子。    </p><h3 id="做什么"><a href="#做什么" class="headerlink" title="做什么"></a>做什么</h3><p>&emsp;&emsp;做什么？对，博客能做什么？简单一点，练练打字、写写感想、晒晒旅游、长长技术等等；我想这些都是博客可以做的吧，先从简单的做起，慢慢地做，渐渐地也就Better few than none !(ps:想想好久没有用!了，怀念那个用!疯狂的少年)</p><h3 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h3><p>&emsp;&emsp;这真的是一个大问题，这其中还包含了不少的小问题。写博客有别于写高考作文，有如：<strong>梯子不用时请横着放</strong>、<strong>剧本修改谁说了算</strong> 等此等大坑，但，此坑亦不小，<strong><em>先跳为敬</em></strong>。首先的问题就是关于<strong>写</strong>的问题，写博客真的不是那么容易，记得曾经在某知名的网站写过一个技术草博客，之说以说是草博客，是因为仅仅写了但是没写完，固然也没有发出去。这篇博文，也是构思了好久，最后定下了标题，确定了分支，开始慢慢悠悠地写，写博客真的不能着急，不然博文会”<strong>上火</strong>“，然后就”<strong>BooM</strong>“。还有就是用什么写，看了好几种写博文的方法，发现大家 <a href="http://www.appinn.com/markdown/" target="_blank" rel="external">MarkDown</a> 用的比较多，也是一门饶有风趣的语言，当然也想过直接写 <a href="http://html.com/" target="_blank" rel="external">HTML</a>，与此同时也查找了不少工具，如：<a href="http://dillinger.io/" target="_blank" rel="external">Dillinger</a>、<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>博客平台、<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd MarkDown</a>等等，个人觉得 <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd MarkDown</a> 还是不错的(因为用的还是Windows，强行丢锅微软)，Mac环境下据说(敲黑板，据说，毕竟没有用过Mac) <a href="http://macdown.uranusjr.com/" target="_blank" rel="external">Mac Down</a> 评价不错，还开源免费。这篇用什么写的？当然是凭借强大的 <strong><a href="http://www.sublimetext.com/3" target="_blank" rel="external">Sublime Text 3</a></strong> 外加 <strong>徒手</strong> 了!其次就是<strong>坚持</strong>的问题，如果能像每天晚上坚持睡在床上玩手机一样easy就好多了，这有点头疼，但是尽力吧。不求量，求质(先找个借口)。最后的最后，努力吧，干掉那些<a href="http://baike.baidu.com/link?url=aukvNb58cwMbkKGVsrpPBrxbTA_H-2mDeMzL2S9S1IKLAGuuMD0di4V77uiLsRNv2Yf37CdtzMsPZ_uYVbWVHlCmTQBpvGNYUjTcB8PXWRXYEQTPvg7k3j6J_fvVMmDHWyuMOO7FDN_s6vPFtGcEHq" target="_blank" rel="external">进击的巨人</a>(链接巨长，不信点点看)。</p><h3 id="总总结论"><a href="#总总结论" class="headerlink" title="总总结论"></a>总总结论</h3><p>&emsp;&emsp;找结论？这就是，还有你听了半天的音乐 ..</p><p></p><p style="float:right;">末生</p><div style="clear: both;"></div><p></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&id=26598252&auto=0&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇博客，写了一段比较粗糙杂乱的心路历程。&lt;br&gt;
    
    </summary>
    
      <category term="Whatever" scheme="https://itruman.github.io/categories/Whatever/"/>
    
    
      <category term="NaN" scheme="https://itruman.github.io/tags/NaN/"/>
    
      <category term="Nonsense" scheme="https://itruman.github.io/tags/Nonsense/"/>
    
  </entry>
  
</feed>
